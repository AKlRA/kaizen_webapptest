# Generated by Django 5.1.2 on 2024-12-21 04:30

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Image',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='kaizen_images/')),
                ('description', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='KaizenCoordinator',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('department', models.CharField(max_length=100, unique=True)),
                ('coordinator_name', models.CharField(blank=True, max_length=150, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='KaizenSheet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, unique=True)),
                ('area_implemented', models.CharField(max_length=255)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('problem', models.TextField()),
                ('idea_solved', models.TextField()),
                ('standardization', models.TextField()),
                ('benefits', models.TextField()),
                ('deployment', models.TextField()),
                ('is_temporary', models.BooleanField(default=False)),
                ('project_leader', models.CharField(blank=True, max_length=255, null=True)),
                ('team_member1_id', models.CharField(blank=True, max_length=50, null=True)),
                ('team_member1', models.CharField(blank=True, max_length=255, null=True)),
                ('team_member2_id', models.CharField(blank=True, max_length=50, null=True)),
                ('team_member2', models.CharField(blank=True, max_length=255, null=True)),
                ('savings_start_month', models.CharField(blank=True, max_length=20, null=True)),
                ('estimated_savings', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('realized_savings', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('handwritten_sheet', models.ImageField(blank=True, null=True, upload_to='kaizen/handwritten/', verbose_name='Handwritten Kaizen Sheet')),
                ('is_handwritten', models.BooleanField(default=False)),
                ('approval_status', models.CharField(choices=[('pending', 'Pending'), ('hod_approved', 'HOD Approved'), ('finance_pending', 'Finance Review Pending'), ('finance_approved', 'Finance Approved'), ('finance_rejected', 'Finance Rejected'), ('coordinator_approved', 'Fully Approved')], default='pending', max_length=20)),
                ('hod_approved', models.BooleanField(default=False)),
                ('coordinator_approved', models.BooleanField(default=False)),
                ('hod_approved_at', models.DateTimeField(blank=True, null=True)),
                ('coordinator_approved_at', models.DateTimeField(blank=True, null=True)),
                ('finance_approved', models.BooleanField(default=False)),
                ('finance_approved_at', models.DateTimeField(blank=True, null=True)),
                ('serial_key', models.CharField(blank=True, max_length=15, unique=True)),
                ('before_improvement_image', models.ImageField(blank=True, null=True, upload_to='kaizen/before/')),
                ('after_improvement_image', models.ImageField(blank=True, null=True, upload_to='kaizen/after/')),
                ('impacts_safety', models.BooleanField(default=False)),
                ('impacts_quality', models.BooleanField(default=False)),
                ('impacts_productivity', models.BooleanField(default=False)),
                ('impacts_delivery', models.BooleanField(default=False)),
                ('impacts_cost', models.BooleanField(default=False)),
                ('impacts_morale', models.BooleanField(default=False)),
                ('impacts_environment', models.BooleanField(default=False)),
                ('safety_benefits_description', models.TextField(blank=True, null=True)),
                ('safety_uom', models.CharField(blank=True, max_length=255, null=True)),
                ('safety_before_implementation', models.TextField(blank=True, null=True)),
                ('safety_after_implementation', models.TextField(blank=True, null=True)),
                ('quality_benefits_description', models.TextField(blank=True, null=True)),
                ('quality_uom', models.CharField(blank=True, max_length=255, null=True)),
                ('quality_before_implementation', models.TextField(blank=True, null=True)),
                ('quality_after_implementation', models.TextField(blank=True, null=True)),
                ('productivity_benefits_description', models.TextField(blank=True, null=True)),
                ('productivity_uom', models.CharField(blank=True, max_length=255, null=True)),
                ('productivity_before_implementation', models.TextField(blank=True, null=True)),
                ('productivity_after_implementation', models.TextField(blank=True, null=True)),
                ('delivery_benefits_description', models.TextField(blank=True, null=True)),
                ('delivery_uom', models.CharField(blank=True, max_length=255, null=True)),
                ('delivery_before_implementation', models.TextField(blank=True, null=True)),
                ('delivery_after_implementation', models.TextField(blank=True, null=True)),
                ('cost_benefits_description', models.TextField(blank=True, null=True)),
                ('cost_uom', models.CharField(blank=True, max_length=255, null=True)),
                ('cost_before_implementation', models.TextField(blank=True, null=True)),
                ('cost_after_implementation', models.TextField(blank=True, null=True)),
                ('morale_benefits_description', models.TextField(blank=True, null=True)),
                ('morale_uom', models.CharField(blank=True, max_length=255, null=True)),
                ('morale_before_implementation', models.TextField(blank=True, null=True)),
                ('morale_after_implementation', models.TextField(blank=True, null=True)),
                ('environment_benefits_description', models.TextField(blank=True, null=True)),
                ('environment_uom', models.CharField(blank=True, max_length=255, null=True)),
                ('environment_before_implementation', models.TextField(blank=True, null=True)),
                ('environment_after_implementation', models.TextField(blank=True, null=True)),
                ('before_improvement_text', models.TextField(blank=True, null=True)),
                ('after_improvement_text', models.TextField(blank=True, null=True)),
                ('cost_calculation', models.FileField(blank=True, null=True, upload_to='kaizen/cost_calculations/', verbose_name='Cost Calculation File')),
                ('standardization_file', models.FileField(blank=True, null=True, upload_to='kaizen/standardization/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('coordinator_approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='coordinator_approved_sheets', to=settings.AUTH_USER_MODEL)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='kaizen_sheets_created', to=settings.AUTH_USER_MODEL)),
                ('finance_approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='finance_approved_sheets', to=settings.AUTH_USER_MODEL)),
                ('hod_approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='hod_approved_sheets', to=settings.AUTH_USER_MODEL)),
                ('implemented_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='kaizen_sheets_implemented', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-start_date'],
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_type', models.CharField(choices=[('employee', 'Employee'), ('coordinator', 'Coordinator'), ('hod', 'Hod'), ('finance', 'Finance and Accounts')], default='employee', max_length=20)),
                ('department', models.CharField(blank=True, choices=[('CORPORATE - GENERAL', 'CORPORATE - GENERAL'), ('SCM - CONVEYOR DESIGN & ASSEMBLY', 'SCM - CONVEYOR DESIGN & ASSEMBLY'), ('SUPPLY CHAIN MANAGEMENT', 'SUPPLY CHAIN MANAGEMENT'), ('ASSEMBLY MECH - HMC', 'ASSEMBLY MECH - HMC'), ('SCM - LOGISTICS', 'SCM - LOGISTICS'), ('ASSEMBLY MECH - VMC', 'ASSEMBLY MECH - VMC'), ('ASSEMBLY', 'ASSEMBLY'), ('TSG - MARKETING TOOLED UP MACHINES', 'TSG - MARKETING TOOLED UP MACHINES'), ('STORES - MECH', 'STORES - MECH'), ('FA - SUB ASSEMBLY', 'FA - SUB ASSEMBLY'), ('PACKING & DISPATCH', 'PACKING & DISPATCH'), ('METHODS ENGINEERING', 'METHODS ENGINEERING'), ('L & D - TECHNICAL TRAINER', 'L & D - TECHNICAL TRAINER'), ('SCM - PURCHASE B/O & IMPORTS', 'SCM - PURCHASE B/O & IMPORTS'), ('MACHINE SHOP', 'MACHINE SHOP'), ('DESIGN & DEVELOPMENT', 'DESIGN & DEVELOPMENT'), ('BB - SUB ASSEMBLY - HEADSTOCK & INDEX TABLE', 'BB - SUB ASSEMBLY - HEADSTOCK & INDEX TABLE'), ('PLANT MAINTENANCE', 'PLANT MAINTENANCE'), ('ELECTRICAL - DESIGN', 'ELECTRICAL - DESIGN'), ('QUALITY', 'QUALITY'), ('ELECTRICAL - LINE ASSEMBLY', 'ELECTRICAL - LINE ASSEMBLY'), ('ACCOUNTS & ADMIN', 'ACCOUNTS & ADMIN'), ('FA - SUB ASSEMBLY - PNEUMATIC', 'FA - SUB ASSEMBLY - PNEUMATIC'), ('BB - SUB ASSEMBLY', 'BB - SUB ASSEMBLY'), ('ELECTRICAL - CABINET ASSEMBLY', 'ELECTRICAL - CABINET ASSEMBLY'), ('ASSEMBLY MECH - VMC - LAPC', 'ASSEMBLY MECH - VMC - LAPC'), ('LINE ASSEMBLY', 'LINE ASSEMBLY'), ('TRYOUTS', 'TRYOUTS'), ('TSG - SALES EXECUTION', 'TSG - SALES EXECUTION'), ('SCM - SPARES SUPPLY', 'SCM - SPARES SUPPLY'), ('PPC', 'PPC'), ('ELECTRICAL - PLANNING', 'ELECTRICAL - PLANNING'), ('CSG', 'CSG'), ('TSG - APPLICATION ENGINEERING', 'TSG - APPLICATION ENGINEERING'), ('PAINT SHOP', 'PAINT SHOP'), ('TSG - EXPORTS', 'TSG - EXPORTS'), ('FIXTURE DESIGN', 'FIXTURE DESIGN'), ('ASSEMBLY MECH - VMC - RAPC', 'ASSEMBLY MECH - VMC - RAPC'), ('R & D', 'R & D'), ('ELECTRICAL - ASSEMBLY', 'ELECTRICAL - ASSEMBLY'), ('EXPORT ASSEMBLY', 'EXPORT ASSEMBLY'), ('ELECTRICAL - PROCUREMENT', 'ELECTRICAL - PROCUREMENT'), ('BB - SUB ASSEMBLY - ROTARY APC', 'BB - SUB ASSEMBLY - ROTARY APC'), ('FA - SUB ASSEMBLY - DISC & GRIPPER ARM', 'FA - SUB ASSEMBLY - DISC & GRIPPER ARM'), ('HRD', 'HRD'), ('SA - FIXTURE', 'SA - FIXTURE'), ('SCM - PROCESS ENGINEERING - MANUFACTURING EXCELLENCE', 'SCM - PROCESS ENGINEERING - MANUFACTURING EXCELLENCE'), ('PROJECTS', 'PROJECTS'), ('TSG - DIE & MOULD', 'TSG - DIE & MOULD'), ('TSG - BUSINESS DEVELOPMENT', 'TSG - BUSINESS DEVELOPMENT'), ('SCM - SHEETMETAL PROCUREMENT', 'SCM - SHEETMETAL PROCUREMENT'), ('BB - SUB ASSEMBLY - LINEAR APC', 'BB - SUB ASSEMBLY - LINEAR APC'), ('BB - SUB ASSEMBLY - SPINDLE', 'BB - SUB ASSEMBLY - SPINDLE'), ('SCM - PATTERN & CASTING', 'SCM - PATTERN & CASTING'), ('ISG - HARDWARE & NETWORKING', 'ISG - HARDWARE & NETWORKING'), ('FA - SUB ASSEMBLY - FRONT ATC', 'FA - SUB ASSEMBLY - FRONT ATC'), ('BB - SUB ASSEMBLY - ROTARY TABLE & CONE ASSEMBLY', 'BB - SUB ASSEMBLY - ROTARY TABLE & CONE ASSEMBLY'), ('SCM - B & C CLASS FOE', 'SCM - B & C CLASS FOE'), ('SCM - DIGITAL SAP AMALGAMATION', 'SCM - DIGITAL SAP AMALGAMATION'), ('SCM - MANUFACTURING', 'SCM - MANUFACTURING'), ('BB - SUB ASSEMBLY - SLIDE PALLET LAPC/RAPC', 'BB - SUB ASSEMBLY - SLIDE PALLET LAPC/RAPC'), ('BB - SUB ASSEMBLY - BALLSCREW', 'BB - SUB ASSEMBLY - BALLSCREW'), ('TSG - MARKETING', 'TSG - MARKETING'), ('BASE BUILD - AMS 2', 'BASE BUILD - AMS 2'), ('FA - SUB ASSEMBLY - COOLANT SYSTEMS', 'FA - SUB ASSEMBLY - COOLANT SYSTEMS'), ('ELECTRICAL - SUB ASSEMBLY', 'ELECTRICAL - SUB ASSEMBLY'), ('STORES', 'STORES'), ('SCM - COSTING & INVENTORY CONTROL', 'SCM - COSTING & INVENTORY CONTROL'), ('SCM - A CLASS MANUFACTURING', 'SCM - A CLASS MANUFACTURING'), ('TSG - AEROSPACE', 'TSG - AEROSPACE'), ('TSG - AUTOMATION', 'TSG - AUTOMATION'), ('EEP', 'EEP'), ('ELECTRICAL - NAPC', 'ELECTRICAL - NAPC'), ('ELECTRICAL - RAPC', 'ELECTRICAL - RAPC'), ('ELECTRICAL - LARGE VMC', 'ELECTRICAL - LARGE VMC'), ('ELECTRICAL - LARGE HMC', 'ELECTRICAL - LARGE HMC'), ('TSG - MARKETING - TENDERS', 'TSG - MARKETING - TENDERS'), ('ELECTRICAL - EXPORT', 'ELECTRICAL - EXPORT')], max_length=100, null=True)),
                ('employee_id', models.CharField(blank=True, help_text='Unique employee identification number', max_length=50, null=True, unique=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='HorizontalDeployment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('department', models.CharField(max_length=100)),
                ('deployed_at', models.DateTimeField(auto_now_add=True)),
                ('kaizen_sheet', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='deployments', to='kaizen_app.kaizensheet')),
            ],
            options={
                'unique_together': {('kaizen_sheet', 'department')},
            },
        ),
    ]
